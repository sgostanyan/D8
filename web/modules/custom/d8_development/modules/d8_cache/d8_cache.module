<?php

use Drupal\Core\Cache\Cache;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function d8_cache_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the d8_cache module.
    case 'help.page.d8_cache':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Drupal 8 cache') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_preprocess_page().
 */
function d8_cache_preprocess_page(&$variables) {

  ## Cache statique ##
  $lang = Drupal::languageManager()->getCurrentLanguage()->getId();
  $cid = 'd8_cache:' . $lang;
  $data = NULL;
  $cache = \Drupal::cache()->get($cid);
  $message = '[d8_cache] ';
  if ($cache && $cache->data) {
    $message .= 'Current language from cache : ' .  $cache->data;
  }
  else {
    $message .= 'Current language no cache : ' . _longFunction($lang);
    \Drupal::cache()->set($cid, $lang, Cache::PERMANENT, ['d8_cache_custom']);
  }
  Drupal::messenger()->addStatus($message, 'notice');
}

/**
 * @param $lang
 *
 * @return mixed
 */
function _longFunction($lang) {
  sleep('5');
  return $lang;
}

/**
 * Implements hook_entity_view().
 */
function d8_cache_node_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {

  # Cache de rendu.
  $linkBuild = [
    '#theme' => 'links',
    '#links' => [
      [
        'title' => $entity->label() . '- Link my node',
        'url' => $entity->toUrl(),
      ],
    ],
    '#cache' => [
      'keys' => ['d8_cache_link_my_nodes'],
      'contexts' => ['languages', 'user.permissions', 'user.roles'],
      'tags' => [],
      'max-age' => Cache::PERMANENT,
    ],
  ];

  $linkBuild['#cache']['contexts'] = Cache::mergeContexts($linkBuild['#cache']['contexts'], $entity->getCacheContexts());
  $linkBuild['#cache']['tags'] = Cache::mergeTags($linkBuild['#cache']['tags'], $entity->getCacheTags());
  $linkBuild['#cache']['max-age'] = Cache::mergeMaxAges($linkBuild['#cache']['max-age'], $entity->getCacheMaxAge());

  $build['link_my_node'] = $linkBuild;
}
