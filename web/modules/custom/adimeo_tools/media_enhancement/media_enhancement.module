<?php

/**
 * @file
 * Contains media_enhancement.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\media_enhancement\Service\MediaEnhancementManager;

/**
 * Implements hook_help().
 */
function media_enhancement_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the media_enhancement module.
    case 'help.page.media_enhancement':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Optimisation de la gestion des images') . '</p>';
      return $output;

    default:
  }
}

/**
 * Déclaration d'un thème pour l'image lazyloadée
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 * @return array
 */

function media_enhancement_theme($existing, $type, $theme, $path) {
  return [
    'image_lazy' => [
      'path' => $path,
      'template' => 'templates/image-lazy',
      'render element' => 'content',
      'variables' => []
    ]
  ];
}

function media_enhancement_theme_registry_alter(&$existing) {
  $existing['image_lazy']['variables'] = $existing['image']['variables'];
}

/**
 * Préprocess déclenché quand on passe dans le thème d'image `image_lazy`
 * @param $variables
 */
function media_enhancement_preprocess_image_lazy(&$variables) {
  template_preprocess_image($variables);
  
  MediaEnhancementManager::me()->preprocessImage($variables);
}

function media_enhancement_preprocess_image_formatter(&$variables) {
  if(is_null($variables['item_attributes'])) {
    return null;
  }
  if(array_key_exists('lazyload', $variables['item_attributes']) && $variables['item_attributes']['lazyload']) {
    $variables['image']['#theme'] = 'image_lazy';
  }
}

function media_enhancement_page_attachments(&$page) {
  $page['#attached']['library'][] = 'media_enhancement/lazyloading';
}


/**
 * Implements hook_preprocess_HOOK().
 */
function media_enhancement_preprocess_image(&$variables) {
  MediaEnhancementManager::me()->preprocessImage($variables);
}

function media_enhancement_crop_presave(Drupal\Core\Entity\EntityInterface $entity) {
  \Drupal\media_enhancement\Controllers\ImageReducer::flushByUri($entity->uri->value);
}