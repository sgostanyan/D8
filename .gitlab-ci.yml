# GitLab CI script for Drupal 8 websites.
# @see https://www.dx-experts.nl/blog/2018/drupal-8-and-gitlab-ci-setup-guide
# @see https://gitlab.com/dx-experts/drupal-templates-for-gitlab-ci
#
# This script deploys a Drupal 8 site on each commit on the master-branch.
#
# Preparation:
# Save $SSH_PRIVATE_KEY first in GitLab CI variables.
variables:
  GIT_ROOT: "/var/www/html/d8/application"
  SSH_LOGIN: "ssh -vvv -p22 -oStrictHostKeyChecking=no ubuntu@sardev.tk"

before_script:
  # @see https://docs.gitlab.com/ee/ci/ssh_keys/
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  #- echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - ssh-add <(echo "$SSH_PRIVATE_KEY")
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

deploy_master:
  stage: deploy
  only:
    - master
  script:
    - $SSH_LOGIN "pwd"
    - $SSH_LOGIN "$GIT_ROOT/deploy/run.sh"
#   - $SSH_LOGIN "cd $GIT_ROOT && git fetch --tags"
#    - $SSH_LOGIN "cd $GIT_ROOT && git pull"
    # Never blindly run composer update on the server: https://blog.martinhujer.cz/17-tips-for-using-composer-efficiently/
#    - $SSH_LOGIN "cd $GIT_ROOT && $COMPOSER install -n"
#    # Updates must be run before configuration is imported
#    # https://drupal.stackexchange.com/questions/188840/what-order-should-configuration-import-and-module-updates-be-run
#    - $SSH_LOGIN "cd $GIT_ROOT && $DRUSH updatedb -y"
#    - $SSH_LOGIN "cd $GIT_ROOT && $DRUSH config-import -y"
    # (Additional) sanitizing tasks.
    #- $SSH_LOGIN "cd $GIT_ROOT && $DRUSH locale:check"
    #- $SSH_LOGIN "cd $GIT_ROOT; $DRUSH locale:update"
#    - $SSH_LOGIN "cd $GIT_ROOT && $DRUSH core-cron"
    # You should consider fine-grained cache invalidation
    # @see https://www.dx-experts.nl/blog/2017/drupal-8-development-caching
#    - $SSH_LOGIN "cd $GIT_ROOT && $DRUSH cache-rebuild -y"
  when: manual
